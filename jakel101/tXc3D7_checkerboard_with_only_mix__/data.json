{
  "ver": "0.1",
  "info": {
    "id": "tXc3D7",
    "date": "1751330967",
    "viewed": 85,
    "name": "checkerboard with only mix()",
    "username": "jakel101",
    "description": "what if you are only allowed to use one built in function?\n\nwhich other function has potential?",
    "likes": 2,
    "published": 3,
    "flags": 0,
    "usePreview": 0,
    "tags": [
      "justmix",
      "onlymix",
      "onefunction"
    ],
    "hasliked": 0,
    "retrieved": "2025-07-22T00:10:11.839842+00:00"
  },
  "renderpass": [
    {
      "inputs": [],
      "outputs": [
        {
          "id": 37,
          "channel": 0
        }
      ],
      "code": "/*#=#=#=#=#=#=#=#=#=#=#=#=#=#=\n*  The One Function Challenge\n* #=#=#=#=#=#=#=#=#=#=#=#=#=#=\n* \n* only use a single built in function\n*\n* !RULES:\n* + constructors, literals, uniforms are OKAY\n* + array subscript and swizzling are FINE\n* - functions and operators (including unary -, comparison) are NOT ALLOWED\n* ~ control flow (for, while, if, else, ...) is ALRIGHT (but can we do without?)\n* LIMITATIONS:\n* > since there will be no subsitutes for texture sampling or bitcasting,\n* > it will be Image pass only, and no input Channels (open for debate)\n*\n*\n* /\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\\n*   First Edition: only mix\n* \\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n*\n* https://registry.khronos.org/OpenGL-Refpages/es3.0/html/mix.xhtml\n* >> mix(a,b,x) = a*(1-x) + b*x\n* We have recently been told to not use mix as an optimization:\n* https://iquilezles.org/articles/gpuconditionals/ so hear me out.\n* What if we ONLY use mix? Contributions, Submissions and Improvements welcome!\n* \n* self link: https://www.shadertoy.com/view/tXc3D7\n*/\n\n\n\n\n// the following is my attempt to do at least a checkerboard and see how far I can go.\n// If you don't want to be spoiled and have the fun of discovery yourself, don't scroll down!\n// thanks to @Coderizer for brainstorming the start, @Cottrezz and @diatribes for feedback.\n// please join the discussion below or better yet on the official Discord.\n// yes there is an official Shadertoy discord, scroll down on the website invite link is bottom left corner\n// link to where my idea started (and discussion followed):\n// https://discord.com/channels/578696555612209173/578696556069257231/1389206125584449697\n\n\n// just as a joke, we can even define mix by it's implementation\n# define MIX(a,b,x) (a*(1-x) + b*x)\n\n// arithmetic\n# define MUL(a,b) mix(0.0, a, b)\n# define NEG(a) mix(a, 0.0, 2.0)\n# define ADD(a,b) MUL(mix(a,b, 0.5), 2.0)\n# define SUB(a,b) ADD(a, NEG(b))\n// DIV still missing (without some kind of loop)\n\n// logic\n# define NOT(a) bool(mix(1.0, 0.0, float(bool(a))))\n# define OR(a,b) bool(ADD(float(bool(a)), float(bool(b))))\n# define AND(a,b) NOT(OR(NOT(a), NOT(b)))\n# define XOR(a,b) AND(OR(a,b), NOT(AND(a,b)))\n\n// conditionals\n# define EQ(a,b) bool(NOT(bool(SUB(a,b))))\n\n\n// shader specific\n# define FLOOR(a) float(int(a))\n# define FRACT(a) SUB(a,FLOOR(a))\n# define STEP(a,x) float(bool(uint(ADD(SUB(x,a),1.0))))\n// STEP also works as LEQ (less eqaul than) I think\n// NOTICE: uint(-1.0) is undefined behaviour and therefore not the greatest resource\n\n// exapand formulas to vectors where needed.\n# define MUL2(a,b) vec2(MUL(a.x, b.x), MUL(a.y, b.y))\n# define FRACT2(a) vec2(FRACT(a.x), FRACT(a.y))\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // I wanted to have it be an 8x8 board but game up here\n    float cell_width = MUL(iResolution.x, 0.25);\n    float cell_height = MUL(iResolution.y, 0.25);\n    \n    float cell_x = STEP(MUL(iResolution.x, 0.5), fragCoord.x);\n    float cell_y = STEP(MUL(iResolution.y, 0.5), fragCoord.y);\n    \n    vec3 col;\n    \n    col = vec3(XOR(cell_x, cell_y));    \n    fragColor = vec4(col,1.0);\n}",
      "name": "Image",
      "description": "",
      "type": "image"
    }
  ]
}